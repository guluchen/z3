(set-logic ALL)
(declare-const lines String)
(declare-const results String)
(declare-const num_params String)
(assert (not (<= (str.len lines) 0)))
(assert (< 0 (str.len lines)))
(assert (not (str.contains (str.at lines 0) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 0) "kappa under")))
(assert (< 1 (str.len lines)))
(assert (not (str.contains (str.at lines 1) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 1) "kappa under")))
(assert (< 2 (str.len lines)))
(assert (not (str.contains (str.at lines 2) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 2) "kappa under")))
(assert (< 3 (str.len lines)))
(assert (not (str.contains (str.at lines 3) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 3) "kappa under")))
(assert (< 4 (str.len lines)))
(assert (not (str.contains (str.at lines 4) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 4) "kappa under")))
(assert (< 5 (str.len lines)))
(assert (not (str.contains (str.at lines 5) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 5) "kappa under")))
(assert (< 6 (str.len lines)))
(assert (not (str.contains (str.at lines 6) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 6) "kappa under")))
(assert (< 7 (str.len lines)))
(assert (not (str.contains (str.at lines 7) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 7) "kappa under")))
(assert (< 8 (str.len lines)))
(assert (not (str.contains (str.at lines 8) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 8) "kappa under")))
(assert (< 9 (str.len lines)))
(assert (not (str.contains (str.at lines 9) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 9) "kappa under")))
(assert (< 10 (str.len lines)))
(assert (not (str.contains (str.at lines 10) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 10) "kappa under")))
(assert (< 11 (str.len lines)))
(assert (not (str.contains (str.at lines 11) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 11) "kappa under")))
(assert (< 12 (str.len lines)))
(assert (not (str.contains (str.at lines 12) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 12) "kappa under")))
(assert (< 13 (str.len lines)))
(assert (not (str.contains (str.at lines 13) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 13) "kappa under")))
(assert (< 14 (str.len lines)))
(assert (not (str.contains (str.at lines 14) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 14) "kappa under")))
(assert (< 15 (str.len lines)))
(assert (not (str.contains (str.at lines 15) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 15) "kappa under")))
(assert (< 16 (str.len lines)))
(assert (not (str.contains (str.at lines 16) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 16) "kappa under")))
(assert (< 17 (str.len lines)))
(assert (not (str.contains (str.at lines 17) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 17) "kappa under")))
(assert (< 18 (str.len lines)))
(assert (not (str.contains (str.at lines 18) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 18) "kappa under")))
(assert (< 19 (str.len lines)))
(assert (not (str.contains (str.at lines 19) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 19) "kappa under")))
(assert (< 20 (str.len lines)))
(assert (not (str.contains (str.at lines 20) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 20) "kappa under")))
(assert (not (< 21 (str.len lines))))
(assert (< 0 (str.len lines)))
(assert (not (str.contains (str.at lines 0) "Rate parameters:")))
(assert (not (str.contains (str.at lines 0) "rate: ")))
(assert (not (str.contains (str.at lines 0) "matrix Q")))
(assert (not (str.contains (str.at lines 0) "alpha")))
(assert (not (str.contains (str.at lines 0) "rho")))
(assert (not (str.contains (str.at lines 0) "transition probabilities")))
(assert (< 1 (str.len lines)))
(assert (not (str.contains (str.at lines 1) "Rate parameters:")))
(assert (not (str.contains (str.at lines 1) "rate: ")))
(assert (not (str.contains (str.at lines 1) "matrix Q")))
(assert (not (str.contains (str.at lines 1) "alpha")))
(assert (not (str.contains (str.at lines 1) "rho")))
(assert (not (str.contains (str.at lines 1) "transition probabilities")))
(assert (< 2 (str.len lines)))
(assert (not (str.contains (str.at lines 2) "Rate parameters:")))
(assert (not (str.contains (str.at lines 2) "rate: ")))
(assert (not (str.contains (str.at lines 2) "matrix Q")))
(assert (not (str.contains (str.at lines 2) "alpha")))
(assert (not (str.contains (str.at lines 2) "rho")))
(assert (not (str.contains (str.at lines 2) "transition probabilities")))
(assert (< 3 (str.len lines)))
(assert (not (str.contains (str.at lines 3) "Rate parameters:")))
(assert (not (str.contains (str.at lines 3) "rate: ")))
(assert (not (str.contains (str.at lines 3) "matrix Q")))
(assert (not (str.contains (str.at lines 3) "alpha")))
(assert (not (str.contains (str.at lines 3) "rho")))
(assert (not (str.contains (str.at lines 3) "transition probabilities")))
(assert (< 4 (str.len lines)))
(assert (not (str.contains (str.at lines 4) "Rate parameters:")))
(assert (not (str.contains (str.at lines 4) "rate: ")))
(assert (not (str.contains (str.at lines 4) "matrix Q")))
(assert (not (str.contains (str.at lines 4) "alpha")))
(assert (not (str.contains (str.at lines 4) "rho")))
(assert (not (str.contains (str.at lines 4) "transition probabilities")))
(assert (< 5 (str.len lines)))
(assert (not (str.contains (str.at lines 5) "Rate parameters:")))
(assert (not (str.contains (str.at lines 5) "rate: ")))
(assert (not (str.contains (str.at lines 5) "matrix Q")))
(assert (not (str.contains (str.at lines 5) "alpha")))
(assert (not (str.contains (str.at lines 5) "rho")))
(assert (not (str.contains (str.at lines 5) "transition probabilities")))
(assert (< 6 (str.len lines)))
(assert (not (str.contains (str.at lines 6) "Rate parameters:")))
(assert (not (str.contains (str.at lines 6) "rate: ")))
(assert (not (str.contains (str.at lines 6) "matrix Q")))
(assert (not (str.contains (str.at lines 6) "alpha")))
(assert (not (str.contains (str.at lines 6) "rho")))
(assert (not (str.contains (str.at lines 6) "transition probabilities")))
(assert (< 7 (str.len lines)))
(assert (not (str.contains (str.at lines 7) "Rate parameters:")))
(assert (not (str.contains (str.at lines 7) "rate: ")))
(assert (not (str.contains (str.at lines 7) "matrix Q")))
(assert (not (str.contains (str.at lines 7) "alpha")))
(assert (not (str.contains (str.at lines 7) "rho")))
(assert (not (str.contains (str.at lines 7) "transition probabilities")))
(assert (< 8 (str.len lines)))
(assert (not (str.contains (str.at lines 8) "Rate parameters:")))
(assert (not (str.contains (str.at lines 8) "rate: ")))
(assert (not (str.contains (str.at lines 8) "matrix Q")))
(assert (not (str.contains (str.at lines 8) "alpha")))
(assert (not (str.contains (str.at lines 8) "rho")))
(assert (not (str.contains (str.at lines 8) "transition probabilities")))
(assert (< 9 (str.len lines)))
(assert (not (str.contains (str.at lines 9) "Rate parameters:")))
(assert (not (str.contains (str.at lines 9) "rate: ")))
(assert (not (str.contains (str.at lines 9) "matrix Q")))
(assert (not (str.contains (str.at lines 9) "alpha")))
(assert (not (str.contains (str.at lines 9) "rho")))
(assert (not (str.contains (str.at lines 9) "transition probabilities")))
(assert (< 10 (str.len lines)))
(assert (not (str.contains (str.at lines 10) "Rate parameters:")))
(assert (not (str.contains (str.at lines 10) "rate: ")))
(assert (not (str.contains (str.at lines 10) "matrix Q")))
(assert (not (str.contains (str.at lines 10) "alpha")))
(assert (not (str.contains (str.at lines 10) "rho")))
(assert (not (str.contains (str.at lines 10) "transition probabilities")))
(assert (< 11 (str.len lines)))
(assert (not (str.contains (str.at lines 11) "Rate parameters:")))
(assert (not (str.contains (str.at lines 11) "rate: ")))
(assert (not (str.contains (str.at lines 11) "matrix Q")))
(assert (not (str.contains (str.at lines 11) "alpha")))
(assert (not (str.contains (str.at lines 11) "rho")))
(assert (not (str.contains (str.at lines 11) "transition probabilities")))
(assert (< 12 (str.len lines)))
(assert (not (str.contains (str.at lines 12) "Rate parameters:")))
(assert (not (str.contains (str.at lines 12) "rate: ")))
(assert (not (str.contains (str.at lines 12) "matrix Q")))
(assert (not (str.contains (str.at lines 12) "alpha")))
(assert (not (str.contains (str.at lines 12) "rho")))
(assert (not (str.contains (str.at lines 12) "transition probabilities")))
(assert (< 13 (str.len lines)))
(assert (not (str.contains (str.at lines 13) "Rate parameters:")))
(assert (not (str.contains (str.at lines 13) "rate: ")))
(assert (not (str.contains (str.at lines 13) "matrix Q")))
(assert (not (str.contains (str.at lines 13) "alpha")))
(assert (not (str.contains (str.at lines 13) "rho")))
(assert (not (str.contains (str.at lines 13) "transition probabilities")))
(assert (< 14 (str.len lines)))
(assert (not (str.contains (str.at lines 14) "Rate parameters:")))
(assert (not (str.contains (str.at lines 14) "rate: ")))
(assert (not (str.contains (str.at lines 14) "matrix Q")))
(assert (not (str.contains (str.at lines 14) "alpha")))
(assert (not (str.contains (str.at lines 14) "rho")))
(assert (not (str.contains (str.at lines 14) "transition probabilities")))
(assert (< 15 (str.len lines)))
(assert (not (str.contains (str.at lines 15) "Rate parameters:")))
(assert (not (str.contains (str.at lines 15) "rate: ")))
(assert (not (str.contains (str.at lines 15) "matrix Q")))
(assert (not (str.contains (str.at lines 15) "alpha")))
(assert (not (str.contains (str.at lines 15) "rho")))
(assert (not (str.contains (str.at lines 15) "transition probabilities")))
(assert (< 16 (str.len lines)))
(assert (not (str.contains (str.at lines 16) "Rate parameters:")))
(assert (not (str.contains (str.at lines 16) "rate: ")))
(assert (not (str.contains (str.at lines 16) "matrix Q")))
(assert (not (str.contains (str.at lines 16) "alpha")))
(assert (not (str.contains (str.at lines 16) "rho")))
(assert (not (str.contains (str.at lines 16) "transition probabilities")))
(assert (< 17 (str.len lines)))
(assert (not (str.contains (str.at lines 17) "Rate parameters:")))
(assert (not (str.contains (str.at lines 17) "rate: ")))
(assert (not (str.contains (str.at lines 17) "matrix Q")))
(assert (not (str.contains (str.at lines 17) "alpha")))
(assert (not (str.contains (str.at lines 17) "rho")))
(assert (not (str.contains (str.at lines 17) "transition probabilities")))
(assert (< 18 (str.len lines)))
(assert (not (str.contains (str.at lines 18) "Rate parameters:")))
(assert (not (str.contains (str.at lines 18) "rate: ")))
(assert (not (str.contains (str.at lines 18) "matrix Q")))
(assert (not (str.contains (str.at lines 18) "alpha")))
(assert (not (str.contains (str.at lines 18) "rho")))
(assert (not (str.contains (str.at lines 18) "transition probabilities")))
(assert (< 19 (str.len lines)))
(assert (not (str.contains (str.at lines 19) "Rate parameters:")))
(assert (not (str.contains (str.at lines 19) "rate: ")))
(assert (not (str.contains (str.at lines 19) "matrix Q")))
(assert (not (str.contains (str.at lines 19) "alpha")))
(assert (not (str.contains (str.at lines 19) "rho")))
(assert (not (str.contains (str.at lines 19) "transition probabilities")))
(assert (< 20 (str.len lines)))
(assert (not (str.contains (str.at lines 20) "Rate parameters:")))
(assert (not (str.contains (str.at lines 20) "rate: ")))
(assert (not (str.contains (str.at lines 20) "matrix Q")))
(assert (not (str.contains (str.at lines 20) "alpha")))
(assert (not (str.contains (str.at lines 20) "rho")))
(assert (not (str.contains (str.at lines 20) "transition probabilities")))
(assert (not (< 21 (str.len lines))))
(assert (< 0 (str.len lines)))
(assert (not (str.contains (str.at lines 0) "Base frequencies")))
(assert (not (str.contains (str.at lines 0) "base frequency parameters")))
(assert (not (str.contains (str.at lines 0) "Base frequencies")))
(assert (not (str.contains (str.at lines 0) "freq: ")))
(assert (not (str.contains (str.at lines 0) "(frequency parameters for branches)")))
(assert (< 1 (str.len lines)))
(assert (not (str.contains (str.at lines 1) "Base frequencies")))
(assert (not (str.contains (str.at lines 1) "base frequency parameters")))
(assert (not (str.contains (str.at lines 1) "Base frequencies")))
(assert (not (str.contains (str.at lines 1) "freq: ")))
(assert (not (str.contains (str.at lines 1) "(frequency parameters for branches)")))
(assert (< 2 (str.len lines)))
(assert (not (str.contains (str.at lines 2) "Base frequencies")))
(assert (not (str.contains (str.at lines 2) "base frequency parameters")))
(assert (not (str.contains (str.at lines 2) "Base frequencies")))
(assert (not (str.contains (str.at lines 2) "freq: ")))
(assert (not (str.contains (str.at lines 2) "(frequency parameters for branches)")))
(assert (< 3 (str.len lines)))
(assert (not (str.contains (str.at lines 3) "Base frequencies")))
(assert (not (str.contains (str.at lines 3) "base frequency parameters")))
(assert (not (str.contains (str.at lines 3) "Base frequencies")))
(assert (not (str.contains (str.at lines 3) "freq: ")))
(assert (not (str.contains (str.at lines 3) "(frequency parameters for branches)")))
(assert (< 4 (str.len lines)))
(assert (not (str.contains (str.at lines 4) "Base frequencies")))
(assert (not (str.contains (str.at lines 4) "base frequency parameters")))
(assert (not (str.contains (str.at lines 4) "Base frequencies")))
(assert (not (str.contains (str.at lines 4) "freq: ")))
(assert (not (str.contains (str.at lines 4) "(frequency parameters for branches)")))
(assert (< 5 (str.len lines)))
(assert (not (str.contains (str.at lines 5) "Base frequencies")))
(assert (not (str.contains (str.at lines 5) "base frequency parameters")))
(assert (not (str.contains (str.at lines 5) "Base frequencies")))
(assert (not (str.contains (str.at lines 5) "freq: ")))
(assert (not (str.contains (str.at lines 5) "(frequency parameters for branches)")))
(assert (< 6 (str.len lines)))
(assert (not (str.contains (str.at lines 6) "Base frequencies")))
(assert (not (str.contains (str.at lines 6) "base frequency parameters")))
(assert (not (str.contains (str.at lines 6) "Base frequencies")))
(assert (not (str.contains (str.at lines 6) "freq: ")))
(assert (not (str.contains (str.at lines 6) "(frequency parameters for branches)")))
(assert (< 7 (str.len lines)))
(assert (str.contains (str.at lines 7) "Base frequencies"))
(check-sat)
(get-value (lines))
(get-value (results))
(get-value (num_params))
