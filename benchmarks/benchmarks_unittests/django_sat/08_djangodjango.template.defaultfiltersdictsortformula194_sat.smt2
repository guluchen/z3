(set-logic ALL)
(declare-const value String)
(declare-const arg String)
(assert (str.contains arg "."))
(assert (not (< (str.len arg) 0)))
(assert (not (str.prefixof "_(" arg)))
(assert (not (< (str.len arg) 0)))
(assert (not (> (+ 0 (str.indexof arg "._" 0)) (- 1))))
(assert (not (= (str.at arg 0) "_")))
(assert (not (< (str.len arg) 0)))
(assert (not (= (+ 0 (str.indexof arg "." 0)) (- 1))))
(assert (not (< (+ 0 (str.indexof arg "." 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof arg "." 0)) 1) 0)))
(assert (not (< (str.len arg) 0)))
(assert (not (< (str.len (str.substr arg (+ (+ 0 (str.indexof arg "." 0)) 1) (- (str.len arg) (+ (+ 0 (str.indexof arg "." 0)) 1)))) 0)))
(assert (not (= (+ 0 (str.indexof (str.substr arg (+ (+ 0 (str.indexof arg "." 0)) 1) (- (str.len arg) (+ (+ 0 (str.indexof arg "." 0)) 1))) "." 0)) (- 1))))
(assert (not (< (+ 0 (str.indexof (str.substr arg (+ (+ 0 (str.indexof arg "." 0)) 1) (- (str.len arg) (+ (+ 0 (str.indexof arg "." 0)) 1))) "." 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof (str.substr arg (+ (+ 0 (str.indexof arg "." 0)) 1) (- (str.len arg) (+ (+ 0 (str.indexof arg "." 0)) 1))) "." 0)) 1) 0)))
(assert (not (< (str.len (str.substr arg (+ (+ 0 (str.indexof arg "." 0)) 1) (- (str.len arg) (+ (+ 0 (str.indexof arg "." 0)) 1)))) 0)))
(assert (not (< (str.len (str.substr (str.substr arg (+ (+ 0 (str.indexof arg "." 0)) 1) (- (str.len arg) (+ (+ 0 (str.indexof arg "." 0)) 1))) (+ (+ 0 (str.indexof (str.substr arg (+ (+ 0 (str.indexof arg "." 0)) 1) (- (str.len arg) (+ (+ 0 (str.indexof arg "." 0)) 1))) "." 0)) 1) (- (str.len (str.substr arg (+ (+ 0 (str.indexof arg "." 0)) 1) (- (str.len arg) (+ (+ 0 (str.indexof arg "." 0)) 1)))) (+ (+ 0 (str.indexof (str.substr arg (+ (+ 0 (str.indexof arg "." 0)) 1) (- (str.len arg) (+ (+ 0 (str.indexof arg "." 0)) 1))) "." 0)) 1)))) 0)))
(assert (= (+ 0 (str.indexof (str.substr (str.substr arg (+ (+ 0 (str.indexof arg "." 0)) 1) (- (str.len arg) (+ (+ 0 (str.indexof arg "." 0)) 1))) (+ (+ 0 (str.indexof (str.substr arg (+ (+ 0 (str.indexof arg "." 0)) 1) (- (str.len arg) (+ (+ 0 (str.indexof arg "." 0)) 1))) "." 0)) 1) (- (str.len (str.substr arg (+ (+ 0 (str.indexof arg "." 0)) 1) (- (str.len arg) (+ (+ 0 (str.indexof arg "." 0)) 1)))) (+ (+ 0 (str.indexof (str.substr arg (+ (+ 0 (str.indexof arg "." 0)) 1) (- (str.len arg) (+ (+ 0 (str.indexof arg "." 0)) 1))) "." 0)) 1))) "." 0)) (- 1)))
(assert (< 0 (str.len value)))
(assert (not (< 1 (str.len value))))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__add__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__bool2__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__bool__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__class__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__contains__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__delattr__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__dict__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__dir__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__doc__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__eq__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__format__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__ge__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__getattribute__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__getitem__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__getnewargs__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__gt__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__hash__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__init2__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__init__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__init_subclass__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__int2__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__iter__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__le__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__len__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__lt__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__mod__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__module__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__mul__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__ne__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__new__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__radd__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__reduce__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__reduce_ex__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__repr__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__rmod__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__rmul__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__setattr__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__sizeof__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__str2__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__str__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__subclasshook__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "__weakref__")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "_bin_op")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "_is_int")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "_substr")))
(assert (not (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "capitalize")))
(assert (= (str.substr arg 0 (- (+ 0 (str.indexof arg "." 0)) 0)) "casefold"))
(check-sat)
(get-value (value))
(get-value (arg))
