(set-logic ALL)
(declare-const base String)
(assert (not (< (str.len base) 0)))
(assert (str.prefixof "/" base))
(assert (not (= base "")))
(assert (not (< (str.len base) 0)))
(assert (str.prefixof "/" base))
(assert (not (< (str.len base) 0)))
(assert (not (str.prefixof "//" base)))
(assert (not (< (str.len base) 0)))
(assert (not (= (+ 0 (str.indexof base "/" 0)) (- 1))))
(assert (not (< (+ 0 (str.indexof base "/" 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof base "/" 0)) 1) 0)))
(assert (not (< (str.len base) 0)))
(assert (not (< (str.len (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1)))) 0)))
(assert (not (= (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) (- 1))))
(assert (not (< (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1) 0)))
(assert (not (< (str.len (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1)))) 0)))
(assert (not (< (str.len (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1) (- (str.len (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1)))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1)))) 0)))
(assert (not (= (+ 0 (str.indexof (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1) (- (str.len (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1)))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1))) "/" 0)) (- 1))))
(assert (not (< (+ 0 (str.indexof (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1) (- (str.len (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1)))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1))) "/" 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1) (- (str.len (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1)))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1))) "/" 0)) 1) 0)))
(assert (not (< (str.len (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1) (- (str.len (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1)))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1)))) 0)))
(assert (not (< (str.len (str.substr (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1) (- (str.len (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1)))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1))) (+ (+ 0 (str.indexof (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1) (- (str.len (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1)))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1))) "/" 0)) 1) (- (str.len (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1) (- (str.len (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1)))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1)))) (+ (+ 0 (str.indexof (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1) (- (str.len (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1)))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1))) "/" 0)) 1)))) 0)))
(assert (= (+ 0 (str.indexof (str.substr (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1) (- (str.len (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1)))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1))) (+ (+ 0 (str.indexof (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1) (- (str.len (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1)))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1))) "/" 0)) 1) (- (str.len (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1) (- (str.len (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1)))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1)))) (+ (+ 0 (str.indexof (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1) (- (str.len (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1)))) (+ (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 1))) "/" 0)) 1))) "/" 0)) (- 1)))
(assert (= (str.substr base 0 (- (+ 0 (str.indexof base "/" 0)) 0)) ""))
(assert (not (= (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 0)) "")))
(assert (not (= (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 0)) ".")))
(assert (not (not (= (str.substr (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr base (+ (+ 0 (str.indexof base "/" 0)) 1) (- (str.len base) (+ (+ 0 (str.indexof base "/" 0)) 1))) "/" 0)) 0)) ".."))))
(assert (not (str.prefixof "/" base)))
(check-sat)
(get-value (base))
