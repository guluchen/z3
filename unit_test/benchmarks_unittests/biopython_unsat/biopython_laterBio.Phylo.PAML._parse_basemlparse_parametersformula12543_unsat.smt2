(set-logic ALL)
(declare-const lines String)
(declare-const results String)
(declare-const num_params String)
(assert (not (<= (str.len lines) 0)))
(assert (< 0 (str.len lines)))
(assert (not (str.contains (str.at lines 0) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 0) "kappa under")))
(assert (< 1 (str.len lines)))
(assert (not (str.contains (str.at lines 1) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 1) "kappa under")))
(assert (< 2 (str.len lines)))
(assert (not (str.contains (str.at lines 2) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 2) "kappa under")))
(assert (< 3 (str.len lines)))
(assert (not (str.contains (str.at lines 3) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 3) "kappa under")))
(assert (< 4 (str.len lines)))
(assert (not (str.contains (str.at lines 4) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 4) "kappa under")))
(assert (< 5 (str.len lines)))
(assert (not (str.contains (str.at lines 5) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 5) "kappa under")))
(assert (< 6 (str.len lines)))
(assert (not (str.contains (str.at lines 6) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 6) "kappa under")))
(assert (< 7 (str.len lines)))
(assert (not (str.contains (str.at lines 7) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 7) "kappa under")))
(assert (< 8 (str.len lines)))
(assert (not (str.contains (str.at lines 8) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 8) "kappa under")))
(assert (< 9 (str.len lines)))
(assert (not (str.contains (str.at lines 9) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 9) "kappa under")))
(assert (< 10 (str.len lines)))
(assert (not (str.contains (str.at lines 10) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 10) "kappa under")))
(assert (< 11 (str.len lines)))
(assert (not (str.contains (str.at lines 11) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 11) "kappa under")))
(assert (< 12 (str.len lines)))
(assert (not (str.contains (str.at lines 12) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 12) "kappa under")))
(assert (< 13 (str.len lines)))
(assert (not (str.contains (str.at lines 13) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 13) "kappa under")))
(assert (< 14 (str.len lines)))
(assert (not (str.contains (str.at lines 14) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 14) "kappa under")))
(assert (< 15 (str.len lines)))
(assert (not (str.contains (str.at lines 15) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 15) "kappa under")))
(assert (< 16 (str.len lines)))
(assert (not (str.contains (str.at lines 16) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 16) "kappa under")))
(assert (< 17 (str.len lines)))
(assert (not (str.contains (str.at lines 17) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 17) "kappa under")))
(assert (< 18 (str.len lines)))
(assert (not (str.contains (str.at lines 18) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 18) "kappa under")))
(assert (< 19 (str.len lines)))
(assert (not (str.contains (str.at lines 19) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 19) "kappa under")))
(assert (< 20 (str.len lines)))
(assert (not (str.contains (str.at lines 20) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 20) "kappa under")))
(assert (< 21 (str.len lines)))
(assert (not (str.contains (str.at lines 21) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 21) "kappa under")))
(assert (< 22 (str.len lines)))
(assert (not (str.contains (str.at lines 22) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 22) "kappa under")))
(assert (< 23 (str.len lines)))
(assert (not (str.contains (str.at lines 23) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 23) "kappa under")))
(assert (< 24 (str.len lines)))
(assert (not (str.contains (str.at lines 24) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 24) "kappa under")))
(assert (< 25 (str.len lines)))
(assert (not (str.contains (str.at lines 25) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 25) "kappa under")))
(assert (< 26 (str.len lines)))
(assert (not (str.contains (str.at lines 26) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 26) "kappa under")))
(assert (< 27 (str.len lines)))
(assert (not (str.contains (str.at lines 27) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 27) "kappa under")))
(assert (< 28 (str.len lines)))
(assert (not (str.contains (str.at lines 28) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 28) "kappa under")))
(assert (< 29 (str.len lines)))
(assert (not (str.contains (str.at lines 29) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 29) "kappa under")))
(assert (< 30 (str.len lines)))
(assert (not (str.contains (str.at lines 30) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 30) "kappa under")))
(assert (< 31 (str.len lines)))
(assert (not (str.contains (str.at lines 31) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 31) "kappa under")))
(assert (< 32 (str.len lines)))
(assert (not (str.contains (str.at lines 32) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 32) "kappa under")))
(assert (< 33 (str.len lines)))
(assert (not (str.contains (str.at lines 33) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 33) "kappa under")))
(assert (< 34 (str.len lines)))
(assert (not (str.contains (str.at lines 34) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 34) "kappa under")))
(assert (< 35 (str.len lines)))
(assert (not (str.contains (str.at lines 35) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 35) "kappa under")))
(assert (< 36 (str.len lines)))
(assert (not (str.contains (str.at lines 36) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 36) "kappa under")))
(assert (< 37 (str.len lines)))
(assert (not (str.contains (str.at lines 37) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 37) "kappa under")))
(assert (< 38 (str.len lines)))
(assert (not (str.contains (str.at lines 38) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 38) "kappa under")))
(assert (< 39 (str.len lines)))
(assert (not (str.contains (str.at lines 39) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 39) "kappa under")))
(assert (< 40 (str.len lines)))
(assert (not (str.contains (str.at lines 40) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 40) "kappa under")))
(assert (< 41 (str.len lines)))
(assert (not (str.contains (str.at lines 41) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 41) "kappa under")))
(assert (< 42 (str.len lines)))
(assert (not (str.contains (str.at lines 42) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 42) "kappa under")))
(assert (< 43 (str.len lines)))
(assert (not (str.contains (str.at lines 43) "Parameters (kappa)")))
(assert (not (str.contains (str.at lines 43) "kappa under")))
(assert (not (< 44 (str.len lines))))
(assert (< 0 (str.len lines)))
(assert (not (str.contains (str.at lines 0) "Rate parameters:")))
(assert (not (str.contains (str.at lines 0) "rate: ")))
(assert (not (str.contains (str.at lines 0) "matrix Q")))
(assert (not (str.contains (str.at lines 0) "alpha")))
(assert (not (str.contains (str.at lines 0) "rho")))
(assert (not (str.contains (str.at lines 0) "transition probabilities")))
(assert (< 1 (str.len lines)))
(assert (not (str.contains (str.at lines 1) "Rate parameters:")))
(assert (not (str.contains (str.at lines 1) "rate: ")))
(assert (not (str.contains (str.at lines 1) "matrix Q")))
(assert (not (str.contains (str.at lines 1) "alpha")))
(assert (not (str.contains (str.at lines 1) "rho")))
(assert (not (str.contains (str.at lines 1) "transition probabilities")))
(assert (< 2 (str.len lines)))
(assert (not (str.contains (str.at lines 2) "Rate parameters:")))
(assert (not (str.contains (str.at lines 2) "rate: ")))
(assert (not (str.contains (str.at lines 2) "matrix Q")))
(assert (not (str.contains (str.at lines 2) "alpha")))
(assert (not (str.contains (str.at lines 2) "rho")))
(assert (not (str.contains (str.at lines 2) "transition probabilities")))
(assert (not (< 3 (str.len lines))))
(check-sat)
(get-value (lines))
(get-value (results))
(get-value (num_params))
