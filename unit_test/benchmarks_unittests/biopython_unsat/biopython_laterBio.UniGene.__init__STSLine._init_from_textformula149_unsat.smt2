(set-logic ALL)
(declare-const text String)
(assert (not (< (str.len text) 0)))
(assert (not (= (+ 0 (str.indexof text " " 0)) (- 1))))
(assert (not (< (+ 0 (str.indexof text " " 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof text " " 0)) 1) 0)))
(assert (not (< (str.len text) 0)))
(assert (not (< (str.len (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1)))) 0)))
(assert (not (= (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) (- 1))))
(assert (not (< (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 1) 0)))
(assert (not (< (str.len (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1)))) 0)))
(assert (not (< (str.len (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) (+ (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 1) (- (str.len (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1)))) (+ (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 1)))) 0)))
(assert (= (+ 0 (str.indexof (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) (+ (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 1) (- (str.len (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1)))) (+ (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 1))) " " 0)) (- 1)))
(assert (not (< (str.len (str.substr text 0 (- (+ 0 (str.indexof text " " 0)) 0))) 0)))
(assert (not (= (+ 0 (str.indexof (str.substr text 0 (- (+ 0 (str.indexof text " " 0)) 0)) "=" 0)) (- 1))))
(assert (not (< (+ 0 (str.indexof (str.substr text 0 (- (+ 0 (str.indexof text " " 0)) 0)) "=" 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof (str.substr text 0 (- (+ 0 (str.indexof text " " 0)) 0)) "=" 0)) 1) 0)))
(assert (not (< (str.len (str.substr text 0 (- (+ 0 (str.indexof text " " 0)) 0))) 0)))
(assert (not (< (str.len (str.substr (str.substr text 0 (- (+ 0 (str.indexof text " " 0)) 0)) (+ (+ 0 (str.indexof (str.substr text 0 (- (+ 0 (str.indexof text " " 0)) 0)) "=" 0)) 1) (- (str.len (str.substr text 0 (- (+ 0 (str.indexof text " " 0)) 0))) (+ (+ 0 (str.indexof (str.substr text 0 (- (+ 0 (str.indexof text " " 0)) 0)) "=" 0)) 1)))) 0)))
(assert (= (+ 0 (str.indexof (str.substr (str.substr text 0 (- (+ 0 (str.indexof text " " 0)) 0)) (+ (+ 0 (str.indexof (str.substr text 0 (- (+ 0 (str.indexof text " " 0)) 0)) "=" 0)) 1) (- (str.len (str.substr text 0 (- (+ 0 (str.indexof text " " 0)) 0))) (+ (+ 0 (str.indexof (str.substr text 0 (- (+ 0 (str.indexof text " " 0)) 0)) "=" 0)) 1))) "=" 0)) (- 1)))
(assert (not (< (str.len (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0))) 0)))
(assert (not (= (+ 0 (str.indexof (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) "=" 0)) (- 1))))
(assert (not (< (+ 0 (str.indexof (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) "=" 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) "=" 0)) 1) 0)))
(assert (not (< (str.len (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0))) 0)))
(assert (not (< (str.len (str.substr (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) (+ (+ 0 (str.indexof (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) "=" 0)) 1) (- (str.len (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0))) (+ (+ 0 (str.indexof (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) "=" 0)) 1)))) 0)))
(assert (not (= (+ 0 (str.indexof (str.substr (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) (+ (+ 0 (str.indexof (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) "=" 0)) 1) (- (str.len (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0))) (+ (+ 0 (str.indexof (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) "=" 0)) 1))) "=" 0)) (- 1))))
(assert (not (< (+ 0 (str.indexof (str.substr (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) (+ (+ 0 (str.indexof (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) "=" 0)) 1) (- (str.len (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0))) (+ (+ 0 (str.indexof (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) "=" 0)) 1))) "=" 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof (str.substr (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) (+ (+ 0 (str.indexof (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) "=" 0)) 1) (- (str.len (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0))) (+ (+ 0 (str.indexof (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) "=" 0)) 1))) "=" 0)) 1) 0)))
(assert (< (str.len (str.substr (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) (+ (+ 0 (str.indexof (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) "=" 0)) 1) (- (str.len (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0))) (+ (+ 0 (str.indexof (str.substr (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) 0 (- (+ 0 (str.indexof (str.substr text (+ (+ 0 (str.indexof text " " 0)) 1) (- (str.len text) (+ (+ 0 (str.indexof text " " 0)) 1))) " " 0)) 0)) "=" 0)) 1)))) 0))
(check-sat)
(get-value (text))
