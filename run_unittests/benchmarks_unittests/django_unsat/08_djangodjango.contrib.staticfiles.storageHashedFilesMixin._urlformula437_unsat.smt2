(set-logic ALL)
(declare-const hashed_name_func String)
(declare-const name String)
(declare-const force Bool)
(assert (str.contains name "#"))
(assert (not (< (str.len name) 0)))
(assert (not (> (+ 0 (str.indexof name ":" 0)) 0)))
(assert (not (= (str.substr name 0 (- 2 0)) "//")))
(assert (str.contains name "#"))
(assert (not (< (str.len name) 0)))
(assert (not (= (+ 0 (str.indexof name "#" 0)) (- 1))))
(assert (not (< (+ 0 (str.indexof name "#" 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof name "#" 0)) 1) 0)))
(assert (not (< (str.len name) 0)))
(assert (str.contains (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?"))
(assert (not (< (str.len (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0))) 0)))
(assert (not (= (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) (- 1))))
(assert (not (< (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 1) 0)))
(assert (not (< (str.len (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0))) 0)))
(assert (str.contains (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0)) ";"))
(assert (not (str.contains (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0)) "/")))
(assert (not (< (str.len (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0))) 0)))
(assert (not (< (+ 0 (str.indexof (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0)) ";" 0)) 0)))
(assert (not (< (+ (+ 0 (str.indexof (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0)) ";" 0)) 1) 0)))
(assert (not (< (str.len (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0))) 0)))
(assert (not (not (= (str.substr (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0)) ";" 0)) 0)) ""))))
(assert (not (not (= (str.substr (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0)) (+ (+ 0 (str.indexof (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0)) ";" 0)) 1) (- (str.len (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0))) (+ (+ 0 (str.indexof (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0)) ";" 0)) 1))) ""))))
(assert (not (not (= (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) (+ (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 1) (- (str.len (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0))) (+ (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 1))) ""))))
(assert (not (not (= (str.substr (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0)) (+ (+ 0 (str.indexof (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0)) ";" 0)) 1) (- (str.len (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0))) (+ (+ 0 (str.indexof (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0)) ";" 0)) 1))) ""))))
(assert (not (= (str.substr (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) 0 (- (+ 0 (str.indexof (str.substr name 0 (- (+ 0 (str.indexof name "#" 0)) 0)) "?" 0)) 0)) ";" 0)) 0)) "")))
(check-sat)
(get-value (hashed_name_func))
(get-value (name))
(get-value (force))
